// This file is auto-generated by @hey-api/openapi-ts

import type {
  Oauth2ExchangeslistexchangesResponse,
  WalletgetResponse,
  WalletlistlistwalletsResponse,
  WalletpingpingResponse,
  WallettransactionslisttransactionsResponse,
  WalletwithdrawquoteidexecutewithdrawResponse,
  WalletwithdrawquotequotationResponse,
} from "./types.gen";

export const oauth2ExchangeslistexchangesResponseTransformer = async (
  data: any,
): Promise<Oauth2ExchangeslistexchangesResponse> => {
  data.exchanges = data.exchanges.map((item: any) => {
    item.status = statusEnumSchemaResponseTransformer(item.status);
    return item;
  });
  return data;
};

export const walletgetResponseTransformer = async (
  data: any,
): Promise<WalletgetResponse> => {
  data.exchange = exchangeEnumSchemaResponseTransformer(data.exchange);
  return data;
};

export const walletpingpingResponseTransformer = async (
  data: any,
): Promise<WalletpingpingResponse> => {
  data.exchange = exchangeEnumSchemaResponseTransformer(data.exchange);
  data.status = statusEnum2SchemaResponseTransformer(data.status);
  return data;
};

export const walletlistlistwalletsResponseTransformer = async (
  data: any,
): Promise<WalletlistlistwalletsResponse> => {
  data.wallets = data.wallets.map((item: any) => {
    item.exchange = exchangeEnumSchemaResponseTransformer(item.exchange);
    return item;
  });
  return data;
};

export const wallettransactionslisttransactionsResponseTransformer = async (
  data: any,
): Promise<WallettransactionslisttransactionsResponse> => {
  data.transactions = data.transactions.map((item: any) => {
    item.type = typeEnumSchemaResponseTransformer(item.type);
    if (item.direction) {
      item.direction = directionEnumSchemaResponseTransformer(item.direction);
    }
    if (item.fiatCurrency) {
      item.fiatCurrency = fiatCurrencyEnumSchemaResponseTransformer(
        item.fiatCurrency,
      );
    }
    item.status = statusEnum3SchemaResponseTransformer(item.status);
    return item;
  });
  return data;
};

export const walletwithdrawquotequotationResponseTransformer = async (
  data: any,
): Promise<WalletwithdrawquotequotationResponse> => {
  if (data.feeDetails) {
    data.feeDetails = data.feeDetails.map((item: any) => {
      item.category = categoryEnumSchemaResponseTransformer(item.category);
      return item;
    });
  }
  return data;
};

export const walletwithdrawquoteidexecutewithdrawResponseTransformer = async (
  data: any,
): Promise<WalletwithdrawquoteidexecutewithdrawResponse> => {
  if (data.type) {
    data.type = typeEnum2SchemaResponseTransformer(data.type);
  }
  return data;
};
