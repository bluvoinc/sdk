/**
 * Bluvo API (v0)
 * APIs to supercharge your crypto project.
 *
 * OpenAPI spec version: 0.0.3
 * Contact: help@bluvo.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class Walletwithdrawquotequotation400Response {
    'error': string;
    'type': Walletwithdrawquotequotation400ResponseTypeEnum;
    'result'?: any | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "error",
            "baseName": "error",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Walletwithdrawquotequotation400ResponseTypeEnum",
            "format": ""
        },
        {
            "name": "result",
            "baseName": "result",
            "type": "any",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Walletwithdrawquotequotation400Response.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum Walletwithdrawquotequotation400ResponseTypeEnum {
    GenericNotFound = 'GENERIC_NOT_FOUND',
    GenericUnauthorized = 'GENERIC_UNAUTHORIZED',
    GenericInternalServerError = 'GENERIC_INTERNAL_SERVER_ERROR',
    GenericValidationError = 'GENERIC_VALIDATION_ERROR',
    GenericInvalidRequest = 'GENERIC_INVALID_REQUEST',
    ApikeyInsufficientPermissions = 'APIKEY_INSUFFICIENT_PERMISSIONS',
    WalletNotFound = 'WALLET_NOT_FOUND',
    WalletInvalidCredentials = 'WALLET_INVALID_CREDENTIALS',
    QuoteNotFound = 'QUOTE_NOT_FOUND',
    QuoteExpired = 'QUOTE_EXPIRED',
    WithdrawalInsufficientBalance = 'WITHDRAWAL_INSUFFICIENT_BALANCE',
    WithdrawalInsufficientBalanceForFee = 'WITHDRAWAL_INSUFFICIENT_BALANCE_FOR_FEE',
    WithdrawalInvalidAddress = 'WITHDRAWAL_INVALID_ADDRESS',
    WithdrawalNetworkNotSupported = 'WITHDRAWAL_NETWORK_NOT_SUPPORTED',
    WithdrawalTooManyAddresses = 'WITHDRAWAL_TOO_MANY_ADDRESSES',
    WithdrawalAmountBelowMinimum = 'WITHDRAWAL_AMOUNT_BELOW_MINIMUM',
    WithdrawalAmountAboveMaximum = 'WITHDRAWAL_AMOUNT_ABOVE_MAXIMUM',
    WithdrawalAssetNotSupported = 'WITHDRAWAL_ASSET_NOT_SUPPORTED',
    WithdrawalProviderError = 'WITHDRAWAL_PROVIDER_ERROR',
    Withdrawal2FaRequiredTotp = 'WITHDRAWAL_2FA_REQUIRED_TOTP',
    Withdrawal2FaRequiredSms = 'WITHDRAWAL_2FA_REQUIRED_SMS',
    Withdrawal2FaRequiredYubikey = 'WITHDRAWAL_2FA_REQUIRED_YUBIKEY',
    Withdrawal2FaRequiredPassphrase = 'WITHDRAWAL_2FA_REQUIRED_PASSPHRASE',
    Withdrawal2FaInvalid = 'WITHDRAWAL_2FA_INVALID',
    Withdrawal2FaMethodNotSupported = 'WITHDRAWAL_2FA_METHOD_NOT_SUPPORTED',
    WithdrawalKycRequired = 'WITHDRAWAL_KYC_REQUIRED',
    WithdrawalEmailUnverified = 'WITHDRAWAL_EMAIL_UNVERIFIED',
    WithdrawalRateLimitExceeded = 'WITHDRAWAL_RATE_LIMIT_EXCEEDED',
    OauthAuthorizationFailed = 'OAUTH_AUTHORIZATION_FAILED',
    OauthTokenExchangeFailed = 'OAUTH_TOKEN_EXCHANGE_FAILED',
    OauthInvalidState = 'OAUTH_INVALID_STATE',
    OauthInsufficientScope = 'OAUTH_INSUFFICIENT_SCOPE'
}

