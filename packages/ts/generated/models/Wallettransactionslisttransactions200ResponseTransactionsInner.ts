/**
 * Bluvo API (v0)
 * APIs to supercharge your crypto project.
 *
 * OpenAPI spec version: 0.0.3
 * Contact: help@bluvo.co
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Walletget200ResponseCreatedAt } from '../models/Walletget200ResponseCreatedAt';
import { HttpFile } from '../http/http';

export class Wallettransactionslisttransactions200ResponseTransactionsInner {
    'id': string;
    'walletId': string;
    'createdAt'?: Walletget200ResponseCreatedAt | null;
    'updatedAt'?: Walletget200ResponseCreatedAt | null;
    'timestamp'?: Walletget200ResponseCreatedAt | null;
    'type': Wallettransactionslisttransactions200ResponseTransactionsInnerTypeEnum;
    'amount': number;
    'currency': string;
    'direction'?: Wallettransactionslisttransactions200ResponseTransactionsInnerDirectionEnum | null;
    'feeCost'?: number | null;
    'feeCurrency'?: string | null;
    'amountInFiat'?: number | null;
    'feeInFiat'?: number | null;
    'fiatCurrency'?: Wallettransactionslisttransactions200ResponseTransactionsInnerFiatCurrencyEnum | null;
    'status': Wallettransactionslisttransactions200ResponseTransactionsInnerStatusEnum;
    'addressTo'?: string | null;
    'network'?: string | null;
    'addressFrom'?: string | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "walletId",
            "baseName": "walletId",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "createdAt",
            "type": "Walletget200ResponseCreatedAt",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updatedAt",
            "type": "Walletget200ResponseCreatedAt",
            "format": ""
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "Walletget200ResponseCreatedAt",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "Wallettransactionslisttransactions200ResponseTransactionsInnerTypeEnum",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string",
            "format": ""
        },
        {
            "name": "direction",
            "baseName": "direction",
            "type": "Wallettransactionslisttransactions200ResponseTransactionsInnerDirectionEnum",
            "format": ""
        },
        {
            "name": "feeCost",
            "baseName": "feeCost",
            "type": "number",
            "format": ""
        },
        {
            "name": "feeCurrency",
            "baseName": "feeCurrency",
            "type": "string",
            "format": ""
        },
        {
            "name": "amountInFiat",
            "baseName": "amountInFiat",
            "type": "number",
            "format": ""
        },
        {
            "name": "feeInFiat",
            "baseName": "feeInFiat",
            "type": "number",
            "format": ""
        },
        {
            "name": "fiatCurrency",
            "baseName": "fiatCurrency",
            "type": "Wallettransactionslisttransactions200ResponseTransactionsInnerFiatCurrencyEnum",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "Wallettransactionslisttransactions200ResponseTransactionsInnerStatusEnum",
            "format": ""
        },
        {
            "name": "addressTo",
            "baseName": "addressTo",
            "type": "string",
            "format": ""
        },
        {
            "name": "network",
            "baseName": "network",
            "type": "string",
            "format": ""
        },
        {
            "name": "addressFrom",
            "baseName": "addressFrom",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Wallettransactionslisttransactions200ResponseTransactionsInner.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum Wallettransactionslisttransactions200ResponseTransactionsInnerTypeEnum {
    Deposit = 'deposit',
    Withdrawal = 'withdrawal',
    Transaction = 'transaction'
}
export enum Wallettransactionslisttransactions200ResponseTransactionsInnerDirectionEnum {
    In = 'in',
    Out = 'out'
}
export enum Wallettransactionslisttransactions200ResponseTransactionsInnerFiatCurrencyEnum {
    Usd = 'USD',
    Eur = 'EUR'
}
export enum Wallettransactionslisttransactions200ResponseTransactionsInnerStatusEnum {
    Pending = 'pending',
    Ok = 'ok',
    Failed = 'failed',
    Canceled = 'canceled'
}

